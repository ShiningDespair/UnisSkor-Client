{"ast":null,"code":"const type = require('./type');\nmodule.exports = (args, keyOrder = null) => {\n  // if called with more than 3 arguments, we return the arguments\n  if (args.length >= 3) return Array.prototype.slice.call(args);\n  // with less than 3 args we check if first arg is object\n  // and use the keyOrder string to extract and sort properties\n  if (type(args[0]) == 'object' && keyOrder) {\n    return keyOrder.split('').filter(k => args[0][k] !== undefined).map(k => args[0][k]);\n  }\n  // otherwise we just return the first argument\n  // (which we suppose is an array of args)\n  return args[0];\n};","map":{"version":3,"names":["type","require","module","exports","args","keyOrder","length","Array","prototype","slice","call","split","filter","k","undefined","map"],"sources":["C:/Users/mehme/OneDrive/Masaüstü/UniScore/uniscore/node_modules/chroma-js/src/utils/unpack.js"],"sourcesContent":["const type = require('./type');\n\nmodule.exports = (args, keyOrder=null) => {\n\t// if called with more than 3 arguments, we return the arguments\n    if (args.length >= 3) return Array.prototype.slice.call(args);\n    // with less than 3 args we check if first arg is object\n    // and use the keyOrder string to extract and sort properties\n\tif (type(args[0]) == 'object' && keyOrder) {\n\t\treturn keyOrder.split('')\n\t\t\t.filter(k => args[0][k] !== undefined)\n\t\t\t.map(k => args[0][k]);\n\t}\n\t// otherwise we just return the first argument\n\t// (which we suppose is an array of args)\n    return args[0];\n};\n"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAE9BC,MAAM,CAACC,OAAO,GAAG,CAACC,IAAI,EAAEC,QAAQ,GAAC,IAAI,KAAK;EACzC;EACG,IAAID,IAAI,CAACE,MAAM,IAAI,CAAC,EAAE,OAAOC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACN,IAAI,CAAC;EAC7D;EACA;EACH,IAAIJ,IAAI,CAACI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,QAAQ,IAAIC,QAAQ,EAAE;IAC1C,OAAOA,QAAQ,CAACM,KAAK,CAAC,EAAE,CAAC,CACvBC,MAAM,CAACC,CAAC,IAAIT,IAAI,CAAC,CAAC,CAAC,CAACS,CAAC,CAAC,KAAKC,SAAS,CAAC,CACrCC,GAAG,CAACF,CAAC,IAAIT,IAAI,CAAC,CAAC,CAAC,CAACS,CAAC,CAAC,CAAC;EACvB;EACA;EACA;EACG,OAAOT,IAAI,CAAC,CAAC,CAAC;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}