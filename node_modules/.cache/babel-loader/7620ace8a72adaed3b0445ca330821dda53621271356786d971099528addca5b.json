{"ast":null,"code":"const chroma = require('../../chroma');\nconst Color = require('../../Color');\nconst input = require('../input');\nconst {\n  unpack,\n  type\n} = require('../../utils');\nconst {\n  round\n} = Math;\nColor.prototype.rgb = function (rnd = true) {\n  if (rnd === false) return this._rgb.slice(0, 3);\n  return this._rgb.slice(0, 3).map(round);\n};\nColor.prototype.rgba = function (rnd = true) {\n  return this._rgb.slice(0, 4).map((v, i) => {\n    return i < 3 ? rnd === false ? v : round(v) : v;\n  });\n};\nchroma.rgb = (...args) => new Color(...args, 'rgb');\ninput.format.rgb = (...args) => {\n  const rgba = unpack(args, 'rgba');\n  if (rgba[3] === undefined) rgba[3] = 1;\n  return rgba;\n};\ninput.autodetect.push({\n  p: 3,\n  test: (...args) => {\n    args = unpack(args, 'rgba');\n    if (type(args) === 'array' && (args.length === 3 || args.length === 4 && type(args[3]) == 'number' && args[3] >= 0 && args[3] <= 1)) {\n      return 'rgb';\n    }\n  }\n});","map":{"version":3,"names":["chroma","require","Color","input","unpack","type","round","Math","prototype","rgb","rnd","_rgb","slice","map","rgba","v","i","args","format","undefined","autodetect","push","p","test","length"],"sources":["C:/Users/mehme/OneDrive/MasaÃ¼stÃ¼/UniScore/uniscore/node_modules/chroma-js/src/io/rgb/index.js"],"sourcesContent":["const chroma = require('../../chroma');\nconst Color = require('../../Color');\nconst input = require('../input');\nconst {unpack, type} = require('../../utils');\nconst {round} = Math;\n\nColor.prototype.rgb = function(rnd=true) {\n    if (rnd === false) return this._rgb.slice(0,3);\n    return this._rgb.slice(0,3).map(round);\n}\n\nColor.prototype.rgba = function(rnd=true) {\n    return this._rgb.slice(0,4).map((v,i) => {\n        return i<3 ? (rnd === false ? v : round(v)) : v;\n    });\n};\n\nchroma.rgb = (...args) => new Color(...args, 'rgb');\n\ninput.format.rgb = (...args) => {\n    const rgba = unpack(args, 'rgba');\n    if (rgba[3] === undefined) rgba[3] = 1;\n    return rgba;\n};\n\ninput.autodetect.push({\n    p: 3,\n    test: (...args) => {\n        args = unpack(args, 'rgba');\n        if (type(args) === 'array' && (args.length === 3 ||\n            args.length === 4 && type(args[3]) == 'number' && args[3] >= 0 && args[3] <= 1)) {\n            return 'rgb';\n        }\n    }\n});\n"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,cAAc,CAAC;AACtC,MAAMC,KAAK,GAAGD,OAAO,CAAC,aAAa,CAAC;AACpC,MAAME,KAAK,GAAGF,OAAO,CAAC,UAAU,CAAC;AACjC,MAAM;EAACG,MAAM;EAAEC;AAAI,CAAC,GAAGJ,OAAO,CAAC,aAAa,CAAC;AAC7C,MAAM;EAACK;AAAK,CAAC,GAAGC,IAAI;AAEpBL,KAAK,CAACM,SAAS,CAACC,GAAG,GAAG,UAASC,GAAG,GAAC,IAAI,EAAE;EACrC,IAAIA,GAAG,KAAK,KAAK,EAAE,OAAO,IAAI,CAACC,IAAI,CAACC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC;EAC9C,OAAO,IAAI,CAACD,IAAI,CAACC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAACC,GAAG,CAACP,KAAK,CAAC;AAC1C,CAAC;AAEDJ,KAAK,CAACM,SAAS,CAACM,IAAI,GAAG,UAASJ,GAAG,GAAC,IAAI,EAAE;EACtC,OAAO,IAAI,CAACC,IAAI,CAACC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACE,CAAC,EAACC,CAAC,KAAK;IACrC,OAAOA,CAAC,GAAC,CAAC,GAAIN,GAAG,KAAK,KAAK,GAAGK,CAAC,GAAGT,KAAK,CAACS,CAAC,CAAC,GAAIA,CAAC;EACnD,CAAC,CAAC;AACN,CAAC;AAEDf,MAAM,CAACS,GAAG,GAAG,CAAC,GAAGQ,IAAI,KAAK,IAAIf,KAAK,CAAC,GAAGe,IAAI,EAAE,KAAK,CAAC;AAEnDd,KAAK,CAACe,MAAM,CAACT,GAAG,GAAG,CAAC,GAAGQ,IAAI,KAAK;EAC5B,MAAMH,IAAI,GAAGV,MAAM,CAACa,IAAI,EAAE,MAAM,CAAC;EACjC,IAAIH,IAAI,CAAC,CAAC,CAAC,KAAKK,SAAS,EAAEL,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;EACtC,OAAOA,IAAI;AACf,CAAC;AAEDX,KAAK,CAACiB,UAAU,CAACC,IAAI,CAAC;EAClBC,CAAC,EAAE,CAAC;EACJC,IAAI,EAAEA,CAAC,GAAGN,IAAI,KAAK;IACfA,IAAI,GAAGb,MAAM,CAACa,IAAI,EAAE,MAAM,CAAC;IAC3B,IAAIZ,IAAI,CAACY,IAAI,CAAC,KAAK,OAAO,KAAKA,IAAI,CAACO,MAAM,KAAK,CAAC,IAC5CP,IAAI,CAACO,MAAM,KAAK,CAAC,IAAInB,IAAI,CAACY,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,QAAQ,IAAIA,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;MACjF,OAAO,KAAK;IAChB;EACJ;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}