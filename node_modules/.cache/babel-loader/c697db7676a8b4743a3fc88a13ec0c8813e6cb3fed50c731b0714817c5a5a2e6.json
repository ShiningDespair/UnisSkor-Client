{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mehme\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\UniScore\\\\uniscore\\\\client\\\\src\\\\View\\\\Components\\\\SingleUniversity.jsx\";\nimport './SingleUniversity.css';\nimport University from '../../Helpers/University';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SingleUniversity(props) {\n  const university = props.university;\n  function toCapitalCase(text) {\n    return text.toLowerCase().split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n  }\n\n  // Convert Google Drive link to direct link\n  function getDirectImageLink(driveLink) {\n    if (driveLink) {\n      const fileIdMatch = driveLink.match(/d\\/([a-zA-Z0-9_-]+)/);\n      if (fileIdMatch && fileIdMatch[1]) {\n        const directLink = `https://drive.google.com/uc?export=view&id=${fileIdMatch[1]}`;\n        console.log('Direct Image Link:', directLink); // Log the direct link\n        return directLink;\n      }\n    }\n    return ''; // Return an empty string or a default image URL if the link is invalid\n  }\n  const directImageLink = getDirectImageLink(university.uni_logo);\n\n  // Calculate average rating\n  const averageRating = university.uni_rate / university.uni_rate_count;\n\n  // Calculate number of full stars, half stars, and empty stars\n  const fullStars = Math.floor(averageRating);\n  const hasHalfStar = averageRating % 1 >= 0.3 && averageRating % 1 <= 0.7;\n\n  // Array to store star elements\n  const stars = [];\n\n  // Fill array with full stars\n  for (let i = 0; i < fullStars; i++) {\n    stars.push( /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"fa fa-star checked\"\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 20\n    }, this));\n  }\n\n  // Add half star if applicable\n  if (hasHalfStar) {\n    stars.push( /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"fa fa-star-half-alt checked\"\n    }, fullStars, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 20\n    }, this));\n  }\n\n  // Fill remaining array with empty stars\n  for (let i = stars.length; i < 5; i++) {\n    stars.push( /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"fa fa-star\"\n    }, i + 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 20\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upper\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"uni-logo\",\n        src: directImageLink,\n        alt: \"school_wallpaper\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lower\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"uni-title\",\n          children: university.uni_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rate\",\n        children: stars\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uni-property\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"S\\u0131ralama = \", university.rank, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 53\n          }, this), \"\\u015Eehir = \", toCapitalCase(university.uni_province)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_c = SingleUniversity;\nexport default SingleUniversity;\nvar _c;\n$RefreshReg$(_c, \"SingleUniversity\");","map":{"version":3,"names":["University","jsxDEV","_jsxDEV","SingleUniversity","props","university","toCapitalCase","text","toLowerCase","split","map","word","charAt","toUpperCase","slice","join","getDirectImageLink","driveLink","fileIdMatch","match","directLink","console","log","directImageLink","uni_logo","averageRating","uni_rate","uni_rate_count","fullStars","Math","floor","hasHalfStar","stars","i","push","className","fileName","_jsxFileName","lineNumber","columnNumber","length","children","src","alt","uni_name","rank","uni_province","_c","$RefreshReg$"],"sources":["C:/Users/mehme/OneDrive/Masaüstü/UniScore/uniscore/client/src/View/Components/SingleUniversity.jsx"],"sourcesContent":["import './SingleUniversity.css';\r\nimport University from '../../Helpers/University';\r\n\r\nfunction SingleUniversity(props) {\r\n    const university = props.university;\r\n\r\n    function toCapitalCase(text) {\r\n        return text\r\n            .toLowerCase()\r\n            .split(' ')\r\n            .map(word => word.charAt(0).toUpperCase() + word.slice(1))\r\n            .join(' ');\r\n    }\r\n\r\n    // Convert Google Drive link to direct link\r\n    function getDirectImageLink(driveLink) {\r\n        if (driveLink) {\r\n            const fileIdMatch = driveLink.match(/d\\/([a-zA-Z0-9_-]+)/);\r\n            if (fileIdMatch && fileIdMatch[1]) {\r\n                const directLink = `https://drive.google.com/uc?export=view&id=${fileIdMatch[1]}`;\r\n                console.log('Direct Image Link:', directLink); // Log the direct link\r\n                return directLink;\r\n            }\r\n        }\r\n        return ''; // Return an empty string or a default image URL if the link is invalid\r\n    }\r\n\r\n    const directImageLink = getDirectImageLink(university.uni_logo);\r\n\r\n    // Calculate average rating\r\n    const averageRating = university.uni_rate / university.uni_rate_count;\r\n\r\n    // Calculate number of full stars, half stars, and empty stars\r\n    const fullStars = Math.floor(averageRating);\r\n    const hasHalfStar = averageRating % 1 >= 0.3 && averageRating % 1 <= 0.7;\r\n\r\n    // Array to store star elements\r\n    const stars = [];\r\n\r\n    // Fill array with full stars\r\n    for (let i = 0; i < fullStars; i++) {\r\n        stars.push(<span key={i} className=\"fa fa-star checked\"></span>);\r\n    }\r\n\r\n    // Add half star if applicable\r\n    if (hasHalfStar) {\r\n        stars.push(<span key={fullStars} className=\"fa fa-star-half-alt checked\"></span>);\r\n    }\r\n\r\n    // Fill remaining array with empty stars\r\n    for (let i = stars.length; i < 5; i++) {\r\n        stars.push(<span key={i + 1} className=\"fa fa-star\"></span>);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"upper\">\r\n                <img className=\"uni-logo\" src={directImageLink} alt=\"school_wallpaper\" />\r\n            </div>\r\n            <div className=\"lower\">\r\n                <div>\r\n                    <p className=\"uni-title\">{university.uni_name}</p>\r\n                </div>\r\n\r\n                <div className=\"rate\">\r\n                    {stars}\r\n                </div>\r\n                <div className=\"uni-property\">\r\n                    <p>\r\n                        Sıralama = {university.rank}<br />\r\n                        Şehir = {toCapitalCase(university.uni_province)}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SingleUniversity;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}