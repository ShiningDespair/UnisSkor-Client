{"ast":null,"code":"const Color = require('../Color');\nconst {\n  sqrt,\n  pow,\n  min,\n  max,\n  atan2,\n  abs,\n  cos,\n  sin,\n  exp,\n  PI\n} = Math;\nmodule.exports = function (a, b, Kl = 1, Kc = 1, Kh = 1) {\n  // Delta E (CIE 2000)\n  // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CIE2000.html\n  var rad2deg = function (rad) {\n    return 360 * rad / (2 * PI);\n  };\n  var deg2rad = function (deg) {\n    return 2 * PI * deg / 360;\n  };\n  a = new Color(a);\n  b = new Color(b);\n  const [L1, a1, b1] = Array.from(a.lab());\n  const [L2, a2, b2] = Array.from(b.lab());\n  const avgL = (L1 + L2) / 2;\n  const C1 = sqrt(pow(a1, 2) + pow(b1, 2));\n  const C2 = sqrt(pow(a2, 2) + pow(b2, 2));\n  const avgC = (C1 + C2) / 2;\n  const G = 0.5 * (1 - sqrt(pow(avgC, 7) / (pow(avgC, 7) + pow(25, 7))));\n  const a1p = a1 * (1 + G);\n  const a2p = a2 * (1 + G);\n  const C1p = sqrt(pow(a1p, 2) + pow(b1, 2));\n  const C2p = sqrt(pow(a2p, 2) + pow(b2, 2));\n  const avgCp = (C1p + C2p) / 2;\n  const arctan1 = rad2deg(atan2(b1, a1p));\n  const arctan2 = rad2deg(atan2(b2, a2p));\n  const h1p = arctan1 >= 0 ? arctan1 : arctan1 + 360;\n  const h2p = arctan2 >= 0 ? arctan2 : arctan2 + 360;\n  const avgHp = abs(h1p - h2p) > 180 ? (h1p + h2p + 360) / 2 : (h1p + h2p) / 2;\n  const T = 1 - 0.17 * cos(deg2rad(avgHp - 30)) + 0.24 * cos(deg2rad(2 * avgHp)) + 0.32 * cos(deg2rad(3 * avgHp + 6)) - 0.2 * cos(deg2rad(4 * avgHp - 63));\n  let deltaHp = h2p - h1p;\n  deltaHp = abs(deltaHp) <= 180 ? deltaHp : h2p <= h1p ? deltaHp + 360 : deltaHp - 360;\n  deltaHp = 2 * sqrt(C1p * C2p) * sin(deg2rad(deltaHp) / 2);\n  const deltaL = L2 - L1;\n  const deltaCp = C2p - C1p;\n  const sl = 1 + 0.015 * pow(avgL - 50, 2) / sqrt(20 + pow(avgL - 50, 2));\n  const sc = 1 + 0.045 * avgCp;\n  const sh = 1 + 0.015 * avgCp * T;\n  const deltaTheta = 30 * exp(-pow((avgHp - 275) / 25, 2));\n  const Rc = 2 * sqrt(pow(avgCp, 7) / (pow(avgCp, 7) + pow(25, 7)));\n  const Rt = -Rc * sin(2 * deg2rad(deltaTheta));\n  const result = sqrt(pow(deltaL / (Kl * sl), 2) + pow(deltaCp / (Kc * sc), 2) + pow(deltaHp / (Kh * sh), 2) + Rt * (deltaCp / (Kc * sc)) * (deltaHp / (Kh * sh)));\n  return max(0, min(100, result));\n};","map":{"version":3,"names":["Color","require","sqrt","pow","min","max","atan2","abs","cos","sin","exp","PI","Math","module","exports","a","b","Kl","Kc","Kh","rad2deg","rad","deg2rad","deg","L1","a1","b1","Array","from","lab","L2","a2","b2","avgL","C1","C2","avgC","G","a1p","a2p","C1p","C2p","avgCp","arctan1","arctan2","h1p","h2p","avgHp","T","deltaHp","deltaL","deltaCp","sl","sc","sh","deltaTheta","Rc","Rt","result"],"sources":["C:/Users/mehme/OneDrive/Masaüstü/UniScore/uniscore/node_modules/chroma-js/src/utils/delta-e.js"],"sourcesContent":["const Color = require('../Color');\nconst {sqrt, pow, min, max, atan2, abs, cos, sin, exp, PI} = Math;\n\nmodule.exports = function(a, b, Kl=1, Kc=1, Kh=1) {\n    // Delta E (CIE 2000)\n    // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CIE2000.html\n    var rad2deg = function(rad) {\n        return 360 * rad / (2 * PI);\n    };\n    var deg2rad = function(deg) {\n        return (2 * PI * deg) / 360;\n    };\n    a = new Color(a);\n    b = new Color(b);\n    const [L1,a1,b1] = Array.from(a.lab());\n    const [L2,a2,b2] = Array.from(b.lab());\n    const avgL = (L1 + L2)/2;\n    const C1 = sqrt(pow(a1, 2) + pow(b1, 2));\n    const C2 = sqrt(pow(a2, 2) + pow(b2, 2));\n    const avgC = (C1 + C2)/2;\n    const G = 0.5*(1-sqrt(pow(avgC, 7)/(pow(avgC, 7) + pow(25, 7))));\n    const a1p = a1*(1+G);\n    const a2p = a2*(1+G);\n    const C1p = sqrt(pow(a1p, 2) + pow(b1, 2));\n    const C2p = sqrt(pow(a2p, 2) + pow(b2, 2));\n    const avgCp = (C1p + C2p)/2;\n    const arctan1 = rad2deg(atan2(b1, a1p));\n    const arctan2 = rad2deg(atan2(b2, a2p));\n    const h1p = arctan1 >= 0 ? arctan1 : arctan1 + 360;\n    const h2p = arctan2 >= 0 ? arctan2 : arctan2 + 360;\n    const avgHp = abs(h1p - h2p) > 180 ? (h1p + h2p + 360)/2 : (h1p + h2p)/2;\n    const T = 1 - 0.17*cos(deg2rad(avgHp - 30)) + 0.24*cos(deg2rad(2*avgHp)) + 0.32*cos(deg2rad(3*avgHp + 6)) - 0.2*cos(deg2rad(4*avgHp - 63));\n    let deltaHp = h2p - h1p;\n    deltaHp = abs(deltaHp) <= 180 ? deltaHp : h2p <= h1p ? deltaHp + 360 : deltaHp - 360;\n    deltaHp = 2*sqrt(C1p*C2p)*sin(deg2rad(deltaHp)/2);\n    const deltaL = L2 - L1;\n    const deltaCp = C2p - C1p;    \n    const sl = 1 + (0.015*pow(avgL - 50, 2))/sqrt(20 + pow(avgL - 50, 2));\n    const sc = 1 + 0.045*avgCp;\n    const sh = 1 + 0.015*avgCp*T;\n    const deltaTheta = 30*exp(-pow((avgHp - 275)/25, 2));\n    const Rc = 2*sqrt(pow(avgCp, 7)/(pow(avgCp, 7) + pow(25, 7)));\n    const Rt = -Rc*sin(2*deg2rad(deltaTheta));\n    const result = sqrt(pow(deltaL/(Kl*sl), 2) + pow(deltaCp/(Kc*sc), 2) + pow(deltaHp/(Kh*sh), 2) + Rt*(deltaCp/(Kc*sc))*(deltaHp/(Kh*sh)));\n    return max(0, min(100, result));\n};\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}