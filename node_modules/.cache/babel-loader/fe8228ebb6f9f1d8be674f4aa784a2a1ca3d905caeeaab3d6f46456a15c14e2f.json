{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mehme\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\UniScore\\\\uniscore\\\\client\\\\src\\\\View\\\\Pages\\\\VerificationPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport VCSS from './VerificationPage.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VerificationPage() {\n  _s();\n  const [message, setMessage] = useState('');\n  const location = useLocation();\n  const history = useHistory();\n  useEffect(() => {\n    const queryParams = new URLSearchParams(location.search);\n    const email = queryParams.get('email');\n    const code = queryParams.get('code');\n    console.log(\"Query parameters received - code:\", code, \" email:\", email);\n    if (email && code) {\n      axios.get(`http://localhost:3001/students/verify?email=${encodeURIComponent(email)}&code=${encodeURIComponent(code)}`).then(response => {\n        console.log(\"Verification response received:\", response);\n        setMessage(response.data.message || 'Verification successful.');\n        setTimeout(() => {\n          history.push('/RegistirationPage'); // Redirect to login page after verification\n        }, 3000);\n      }).catch(error => {\n        console.error('Verification error:', error);\n        setMessage('Verification failed. Please try again.');\n      });\n    } else {\n      setMessage('Invalid verification link.');\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"verification-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Email Verification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(VerificationPage, \"VT4Urx4Wvkzro+RO5iN7Kweq/5A=\", false, function () {\n  return [useLocation, useHistory];\n});\n_c = VerificationPage;\nexport default VerificationPage;\nvar _c;\n$RefreshReg$(_c, \"VerificationPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","useHistory","useLocation","VCSS","jsxDEV","_jsxDEV","VerificationPage","_s","message","setMessage","location","history","queryParams","URLSearchParams","search","email","get","code","console","log","encodeURIComponent","then","response","data","setTimeout","push","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","class","_c","$RefreshReg$"],"sources":["C:/Users/mehme/OneDrive/Masaüstü/UniScore/uniscore/client/src/View/Pages/VerificationPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport VCSS from './VerificationPage.module.css';\r\n\r\nfunction VerificationPage() {\r\n    const [message, setMessage] = useState('');\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const queryParams = new URLSearchParams(location.search);\r\n        const email = queryParams.get('email');\r\n        const code = queryParams.get('code');\r\n        console.log(\"Query parameters received - code:\", code, \" email:\", email);\r\n\r\n        if (email && code) {\r\n            axios.get(`http://localhost:3001/students/verify?email=${encodeURIComponent(email)}&code=${encodeURIComponent(code)}`)\r\n                .then(response => {\r\n                    console.log(\"Verification response received:\", response);\r\n                    setMessage(response.data.message || 'Verification successful.');\r\n                    setTimeout(() => {\r\n                        history.push('/RegistirationPage'); // Redirect to login page after verification\r\n                    }, 3000);\r\n                })\r\n                .catch(error => {\r\n                    console.error('Verification error:', error);\r\n                    setMessage('Verification failed. Please try again.');\r\n                });\r\n        } else {\r\n            setMessage('Invalid verification link.');\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className=\"verification-container\">\r\n            <h1>Email Verification</h1>\r\n           <div class=\"loader\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VerificationPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAEC,WAAW,QAAQ,kBAAkB;AAC1D,OAAOC,IAAI,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMW,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,OAAO,GAAGV,UAAU,CAAC,CAAC;EAE5BH,SAAS,CAAC,MAAM;IACZ,MAAMc,WAAW,GAAG,IAAIC,eAAe,CAACH,QAAQ,CAACI,MAAM,CAAC;IACxD,MAAMC,KAAK,GAAGH,WAAW,CAACI,GAAG,CAAC,OAAO,CAAC;IACtC,MAAMC,IAAI,GAAGL,WAAW,CAACI,GAAG,CAAC,MAAM,CAAC;IACpCE,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEF,IAAI,EAAE,SAAS,EAAEF,KAAK,CAAC;IAExE,IAAIA,KAAK,IAAIE,IAAI,EAAE;MACfjB,KAAK,CAACgB,GAAG,CAAE,+CAA8CI,kBAAkB,CAACL,KAAK,CAAE,SAAQK,kBAAkB,CAACH,IAAI,CAAE,EAAC,CAAC,CACjHI,IAAI,CAACC,QAAQ,IAAI;QACdJ,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEG,QAAQ,CAAC;QACxDb,UAAU,CAACa,QAAQ,CAACC,IAAI,CAACf,OAAO,IAAI,0BAA0B,CAAC;QAC/DgB,UAAU,CAAC,MAAM;UACbb,OAAO,CAACc,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;QACxC,CAAC,EAAE,IAAI,CAAC;MACZ,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACZT,OAAO,CAACS,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC3ClB,UAAU,CAAC,wCAAwC,CAAC;MACxD,CAAC,CAAC;IACV,CAAC,MAAM;MACHA,UAAU,CAAC,4BAA4B,CAAC;IAC5C;EACJ,CAAC,CAAC;EAEF,oBACIJ,OAAA;IAAKuB,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACnCxB,OAAA;MAAAwB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5B5B,OAAA;MAAK6B,KAAK,EAAC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEd;AAAC1B,EAAA,CAnCQD,gBAAgB;EAAA,QAEJJ,WAAW,EACZD,UAAU;AAAA;AAAAkC,EAAA,GAHrB7B,gBAAgB;AAqCzB,eAAeA,gBAAgB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}